When would you want to use a remote repository rather than keeping all your work
local?

    You would want to use a remote repository when working with multiple people. In addition,
    you'd want to use a remote repository when writing code that you want others to be able to access
    throughout the writing process.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    This is the same concept with commits. You'd want to pull manually
    so that each pull is meaningful. In addition, you wouldn't want Git
    to pull code that you are not done writing, otherwise you could mess
    up your whole program.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks - Allows you to make a copy of someoneâ€™s repository directly on GitHub
    Clones - downloads an entire git repository and it's history. Stores metadata and		 history of files
    Branches -  labels for commits. They diverge the commit history of a repository into 	  different "versions"
	You use one or the other based on what you're trying to accomplish.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This allows you to have the added protection of being able to restore
    back to that state should something happen to your code.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    collaborating without Git and GitHub would be a lot harder. We wouldn't
    clearly be able to tell when merging or incorporating our different
    works together will create a conflict.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
